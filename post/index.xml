<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts | Academic</title>
    <link>https://bulatkhambaleev.github.io/post/</link>
      <atom:link href="https://bulatkhambaleev.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <description>Posts</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><lastBuildDate>Sat, 05 Nov 2022 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://bulatkhambaleev.github.io/media/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_3.png</url>
      <title>Posts</title>
      <link>https://bulatkhambaleev.github.io/post/</link>
    </image>
    
    <item>
      <title>Оформление лабораторных работ.</title>
      <link>https://bulatkhambaleev.github.io/post/report/</link>
      <pubDate>Sat, 05 Nov 2022 00:00:00 +0000</pubDate>
      <guid>https://bulatkhambaleev.github.io/post/report/</guid>
      <description>&lt;p&gt;Лабораторные работы и отчёты по ним оформляются не по методическим указаниям, а требованиям ГОСТ. Предполагают наличие теоретической части и научно-исследовательской работы с дополнением в виде графиков, кодов при использовании ЭВМ и таблиц с внесением данных до и после проведения эксперимента. Подобные работы не редки в специальностях точных и прикладных наук, психологии и психопедагогике, - в лабораторные условия «помещаются» непосредственно участники опросов и тестов.&lt;/p&gt;
&lt;h3 id=&#34;отчёт-научного-характера&#34;&gt;Отчёт научного характера&lt;/h3&gt;
&lt;p&gt;В ходе проведения исследований все данные и изменения, погрешности и отклонения результатов записываются. Это необходимо для анализа динамики чистоты эксперимента. Например, в физическом или биохимическом опыте некоторые параметры данных фиксируются на электронных носителях для удобства проведения лабораторной работы.Фиксации создают ссылки на другие фиксации, формируя граф журнала разработки. Можно вернуть код к предыдущей фиксации, проверить, как файлы изменились с одной фиксации на следующую, и просмотреть сведения о том, где и когда были внесены изменения. Фиксации идентифицируются в Git уникальным криптографическим хэшом содержимого фиксации. Так как все хэшируется, невозможно вносить изменения, терять сведения или повреждены файлы без обнаружения Git.Системы контроля версий также могут обеспечивать дополнительные, более гибкие функциональные возможности. Например, они могут поддерживать работу с несколькими версиями одного файла, сохраняя общую историю изменений до точки ветвления версий и собственные истории изменений каждой ветви. Кроме того, обычно доступна информация о том, кто из участников, когда и какие изменения вносил. Обычно такого рода информация хранится в журнале изменений, доступ к которому можно ограничить. В отличие от классических, в распределённых системах контроля версий центральный репозиторий не является обязательным.&lt;/p&gt;
&lt;h3 id=&#34;оформление-титульного-листа&#34;&gt;Оформление титульного листа&lt;/h3&gt;
&lt;p&gt;Далее указываются цели и задачи. Например, если необходимо провести вычисление с исходными данными, пишутся задания с указанием вариантов. Ниже – обоснование, для чего проводится эксперимент и на что рассчитан.&lt;/p&gt;
&lt;h3 id=&#34;техническое-оснащение&#34;&gt;Техническое оснащение&lt;/h3&gt;
&lt;p&gt;С каждым новым опытом условия могут меняться в рамках одной работы. Поэтому любые технические моменты должны сопровождаться пунктами с указанием хода работы. Например, сначала готовятся агрегаты, затем – выбор удачного соотношения химических элементов. Описывается метод и способ воздействия, записывается результат – что происходило, было обнаружено или замечено. Все данные вносятся в таблицы.&lt;/p&gt;
&lt;h3 id=&#34;результаты-опытов-и-экспериментальных-исследований&#34;&gt;Результаты опытов и экспериментальных исследований&lt;/h3&gt;
&lt;p&gt;Дублируются результаты в конце исследовательской графы. Если в основной части приводились теоретические аспекты, после чего дано условие для старта работы, то студент обязан привести конечный результат с выводами в заключении.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Прошедшая неделя 3</title>
      <link>https://bulatkhambaleev.github.io/post/week_3/</link>
      <pubDate>Sat, 05 Nov 2022 00:00:00 +0000</pubDate>
      <guid>https://bulatkhambaleev.github.io/post/week_3/</guid>
      <description>&lt;h2 id=&#34;прошедшая-неделя&#34;&gt;Прошедшая неделя&lt;/h2&gt;
&lt;p&gt;В течении прошедшей недели со мной случилось много интересных и неожиданых вещей.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Я получил продление стажировки на своей работе ещё на три дополнительных месяца (очень рад).&lt;/li&gt;
&lt;li&gt;Выполнил лабораторные работы по дисциплинам &amp;ldquo;Моделирование беспроводных сетей&amp;rdquo;, &amp;ldquo;Научное программирование&amp;rdquo;.&lt;/li&gt;
&lt;li&gt;Продолжил изучение немецкого языка. Пока что идёт очень трудно, но я буду стараться и прилагать больше усилий.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Увидимся в следующем посте. Всем пока!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Прошедшая неделя №2</title>
      <link>https://bulatkhambaleev.github.io/post/jupyter/</link>
      <pubDate>Sat, 22 Oct 2022 00:00:00 +0000</pubDate>
      <guid>https://bulatkhambaleev.github.io/post/jupyter/</guid>
      <description>&lt;h2 id=&#34;прошедшая-неделя&#34;&gt;Прошедшая неделя&lt;/h2&gt;
&lt;p&gt;В течении прошедшей недели со мной случилось много интересных и неожиданых вещей.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Я перебрался на новое место работы. Там в целом очень приятно.&lt;/li&gt;
&lt;li&gt;Выполнил лабораторные работы по дисциплинам &amp;ldquo;Моделирование беспроводных сетей&amp;rdquo;.&lt;/li&gt;
&lt;li&gt;А ещё у меня был день рождения. Поздравьте, пожалуйста!&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Увидимся в следующем посте. Всем пока!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Язык разметки Markdown.</title>
      <link>https://bulatkhambaleev.github.io/post/writing-technical-content/</link>
      <pubDate>Sat, 22 Oct 2022 00:00:00 +0000</pubDate>
      <guid>https://bulatkhambaleev.github.io/post/writing-technical-content/</guid>
      <description>&lt;p&gt;Markdown — облегчённый язык разметки, созданный с целью обозначения форматирования в простом тексте, с максимальным сохранением его читаемости человеком, и пригодный для машинного преобразования в языки для продвинутых публикаций.&lt;/p&gt;
&lt;h3 id=&#34;история&#34;&gt;История&lt;/h3&gt;
&lt;p&gt;Первоначально создан в 2004 году Джоном Грубером и Аароном Шварцем. Многие идеи языка были позаимствованы из существующих соглашений по разметке текста в электронных письмах. Реализации языка Markdown преобразуют текст в формате Markdown в валидный, правильно построенный XHTML и заменяют левые угловые скобки («&amp;lt;») и амперсанды («&amp;amp;») на соответствующие коды сущностей. Первой реализацией Markdown стала написанная Грубером реализация на Perl, однако спустя некоторое время появилось множество реализаций от сторонних разработчиков. Реализация на Perl распространяется по лицензии типа BSD. Реализации Markdown на различных языках программирования включены (или доступны в качестве плагина) во многие системы управления содержимым.Фиксации создают ссылки на другие фиксации, формируя граф журнала разработки. Можно вернуть код к предыдущей фиксации, проверить, как файлы изменились с одной фиксации на следующую, и просмотреть сведения о том, где и когда были внесены изменения. Фиксации идентифицируются в Git уникальным криптографическим хэшом содержимого фиксации. Так как все хэшируется, невозможно вносить изменения, терять сведения или повреждены файлы без обнаружения Git.Системы контроля версий также могут обеспечивать дополнительные, более гибкие функциональные возможности. Например, они могут поддерживать работу с несколькими версиями одного файла, сохраняя общую историю изменений до точки ветвления версий и собственные истории изменений каждой ветви. Кроме того, обычно доступна информация о том, кто из участников, когда и какие изменения вносил. Обычно такого рода информация хранится в журнале изменений, доступ к которому можно ограничить. В отличие от классических, в распределённых системах контроля версий центральный репозиторий не является обязательным.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Git. Управление версиями.</title>
      <link>https://bulatkhambaleev.github.io/post/markdown/</link>
      <pubDate>Sat, 08 Oct 2022 00:00:00 +0000</pubDate>
      <guid>https://bulatkhambaleev.github.io/post/markdown/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Git&lt;/strong&gt; (произносится «гит») — распределённая система управления версиями. Проект был создан Линусом Торвальдсом для управления разработкой ядра Linux, первая версия выпущена 7 апреля 2005 года. На сегодняшний день его поддерживает Джунио Хамано.&lt;/p&gt;
&lt;h3 id=&#34;основы-git&#34;&gt;Основы Git&lt;/h3&gt;
&lt;p&gt;При каждом сохранении работы Git создает фиксацию. Фиксация — это моментальный снимок всех файлов в определенный момент времени. Если файл не изменился с одной фиксации на следующую, Git использует ранее сохраненный файл. Эта конструкция отличается от других систем, которые хранят начальную версию файла и сохраняют запись изменений с течением времени.
Фиксации создают ссылки на другие фиксации, формируя граф журнала разработки. Можно вернуть код к предыдущей фиксации, проверить, как файлы изменились с одной фиксации на следующую, и просмотреть сведения о том, где и когда были внесены изменения. Фиксации идентифицируются в Git уникальным криптографическим хэшом содержимого фиксации. Так как все хэшируется, невозможно вносить изменения, терять сведения или повреждены файлы без обнаружения Git.Системы контроля версий также могут обеспечивать дополнительные, более гибкие функциональные возможности. Например, они могут поддерживать работу с несколькими версиями одного файла, сохраняя общую историю изменений до точки ветвления версий и собственные истории изменений каждой ветви. Кроме того, обычно доступна информация о том, кто из участников, когда и какие изменения вносил. Обычно такого рода информация хранится в журнале изменений, доступ к которому можно ограничить. В отличие от классических, в распределённых системах контроля версий центральный репозиторий не является обязательным.&lt;/p&gt;
&lt;h3 id=&#34;ветви&#34;&gt;Ветви&lt;/h3&gt;
&lt;p&gt;Каждый разработчик сохраняет изменения в собственном локальном репозитории кода. В результате может быть много разных изменений, основанных на одной фиксации. Git предоставляет средства для изоляции изменений и последующего их слияния. Ветви, которые являются упрощенными указателями для выполнения работы, управляют этим разделением. После завершения работы, созданной в ветви, эту ветвь можно снова объединить с основной ветвью команды (или магистралью).&lt;/p&gt;
&lt;h3 id=&#34;файлы-и-фиксации&#34;&gt;Файлы и фиксации&lt;/h3&gt;
&lt;p&gt;Файлы в Git находятся в одном из трех состояний: измененных, промежуточных или зафиксированных. При первом изменении файла изменения существуют только в рабочем каталоге. Они еще не являются частью фиксации или истории разработки. Разработчик должен подготовить измененные файлы для включения в фиксацию. Промежуточная область содержит все изменения, которые необходимо включить в следующую фиксацию. Когда разработчик доволен промежуточными файлами, файлы упаковываются в виде фиксации с сообщением, описывающим изменения. Эта фиксация становится частью истории разработки.&lt;/p&gt;
&lt;p&gt;Промежуточное хранение позволяет разработчикам выбирать изменения файлов для сохранения в фиксации, чтобы разбить большие изменения на ряд небольших фиксаций. Уменьшая область фиксаций, проще просмотреть журнал фиксаций, чтобы найти определенные изменения в файле.&lt;/p&gt;
&lt;h3 id=&#34;git--это-не-github&#34;&gt;Git — это не GitHub&lt;/h3&gt;
&lt;p&gt;Git — это программа, которую нужно установить и подключить к проекту для управления системой контроля версий. GitHub — это сайт-хранилище для историй версий проектов: вы подключаете Git, регистрируетесь на GitHub, создаёте онлайн-репозиторий и переносите файлы с Git на GitHub.&lt;/p&gt;
&lt;p&gt;Git — это самая популярная система контроля версий, а GitHub — онлайн-хранилище кода. Git и GitHub настроены на взаимодействие и поэтому часто используются как единый механизм работы с проектом.&lt;/p&gt;
&lt;p&gt;Если нужно, Git можно заменить альтернативной программой контроля версий, а GitHub — другим онлайн-хранилищем кода. Большинству работодателей это не нужно, поскольку знакомство с другими сервисами отнимает время и неудобно многим разработчикам.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Прошедшая неделя</title>
      <link>https://bulatkhambaleev.github.io/post/getting-started/</link>
      <pubDate>Sat, 08 Oct 2022 00:00:00 +0000</pubDate>
      <guid>https://bulatkhambaleev.github.io/post/getting-started/</guid>
      <description>&lt;h2 id=&#34;прошедшая-неделя&#34;&gt;Прошедшая неделя&lt;/h2&gt;
&lt;p&gt;В течении прошедшей недели со мной случилось много интересных и неожиданых вещей.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Я получил продление стажировки на своей работе ещё на три дополнительных месяца (очень рад).&lt;/li&gt;
&lt;li&gt;Выполнил лабораторные работы по дисциплинам &amp;ldquo;Моделирование беспроводных сетей&amp;rdquo;, &amp;ldquo;Научное программирование&amp;rdquo;.&lt;/li&gt;
&lt;li&gt;Продолжил изучение немецкого языка. Пока что идёт очень трудно, но я буду стараться и прилагать больше усилий.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Увидимся в следующем посте. Всем пока!&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
